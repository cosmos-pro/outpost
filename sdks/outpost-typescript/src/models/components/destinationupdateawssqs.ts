/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AWSSQSConfig,
  AWSSQSConfig$inboundSchema,
  AWSSQSConfig$Outbound,
  AWSSQSConfig$outboundSchema,
} from "./awssqsconfig.js";
import {
  AWSSQSCredentials,
  AWSSQSCredentials$inboundSchema,
  AWSSQSCredentials$Outbound,
  AWSSQSCredentials$outboundSchema,
} from "./awssqscredentials.js";
import {
  Topics,
  Topics$inboundSchema,
  Topics$Outbound,
  Topics$outboundSchema,
} from "./topics.js";

export type DestinationUpdateAWSSQS = {
  /**
   * "*" or an array of enabled topics.
   */
  topics?: Topics | undefined;
  config?: AWSSQSConfig | undefined;
  credentials?: AWSSQSCredentials | undefined;
};

/** @internal */
export const DestinationUpdateAWSSQS$inboundSchema: z.ZodType<
  DestinationUpdateAWSSQS,
  z.ZodTypeDef,
  unknown
> = z.object({
  topics: Topics$inboundSchema.optional(),
  config: AWSSQSConfig$inboundSchema.optional(),
  credentials: AWSSQSCredentials$inboundSchema.optional(),
});

/** @internal */
export type DestinationUpdateAWSSQS$Outbound = {
  topics?: Topics$Outbound | undefined;
  config?: AWSSQSConfig$Outbound | undefined;
  credentials?: AWSSQSCredentials$Outbound | undefined;
};

/** @internal */
export const DestinationUpdateAWSSQS$outboundSchema: z.ZodType<
  DestinationUpdateAWSSQS$Outbound,
  z.ZodTypeDef,
  DestinationUpdateAWSSQS
> = z.object({
  topics: Topics$outboundSchema.optional(),
  config: AWSSQSConfig$outboundSchema.optional(),
  credentials: AWSSQSCredentials$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DestinationUpdateAWSSQS$ {
  /** @deprecated use `DestinationUpdateAWSSQS$inboundSchema` instead. */
  export const inboundSchema = DestinationUpdateAWSSQS$inboundSchema;
  /** @deprecated use `DestinationUpdateAWSSQS$outboundSchema` instead. */
  export const outboundSchema = DestinationUpdateAWSSQS$outboundSchema;
  /** @deprecated use `DestinationUpdateAWSSQS$Outbound` instead. */
  export type Outbound = DestinationUpdateAWSSQS$Outbound;
}

export function destinationUpdateAWSSQSToJSON(
  destinationUpdateAWSSQS: DestinationUpdateAWSSQS,
): string {
  return JSON.stringify(
    DestinationUpdateAWSSQS$outboundSchema.parse(destinationUpdateAWSSQS),
  );
}

export function destinationUpdateAWSSQSFromJSON(
  jsonString: string,
): SafeParseResult<DestinationUpdateAWSSQS, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DestinationUpdateAWSSQS$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DestinationUpdateAWSSQS' from JSON`,
  );
}
