/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { destinationsCreate } from "../funcs/destinationsCreate.js";
import { destinationsDelete } from "../funcs/destinationsDelete.js";
import { destinationsDisable } from "../funcs/destinationsDisable.js";
import { destinationsEnable } from "../funcs/destinationsEnable.js";
import { destinationsGet } from "../funcs/destinationsGet.js";
import { destinationsList } from "../funcs/destinationsList.js";
import { destinationsUpdate } from "../funcs/destinationsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Destinations extends ClientSDK {
  /**
   * List Destinations
   *
   * @remarks
   * Return a list of the destinations for the tenant. The endpoint is not paged.
   */
  async list(
    request: operations.ListTenantDestinationsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.Destination>> {
    return unwrapAsync(destinationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Destination
   *
   * @remarks
   * Creates a new destination for the tenant. The request body structure depends on the `type`.
   */
  async create(
    request: operations.CreateTenantDestinationRequest,
    options?: RequestOptions,
  ): Promise<components.Destination> {
    return unwrapAsync(destinationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Destination
   *
   * @remarks
   * Retrieves details for a specific destination.
   */
  async get(
    request: operations.GetTenantDestinationRequest,
    options?: RequestOptions,
  ): Promise<components.Destination> {
    return unwrapAsync(destinationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Destination
   *
   * @remarks
   * Updates the configuration of an existing destination. The request body structure depends on the destination's `type`. Type itself cannot be updated. May return an OAuth redirect URL for certain types.
   */
  async update(
    request: operations.UpdateTenantDestinationRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateTenantDestinationResponse> {
    return unwrapAsync(destinationsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Destination
   *
   * @remarks
   * Deletes a specific destination.
   */
  async delete(
    request: operations.DeleteTenantDestinationRequest,
    options?: RequestOptions,
  ): Promise<components.SuccessResponse> {
    return unwrapAsync(destinationsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Enable Destination
   *
   * @remarks
   * Enables a previously disabled destination.
   */
  async enable(
    request: operations.EnableTenantDestinationRequest,
    options?: RequestOptions,
  ): Promise<components.Destination> {
    return unwrapAsync(destinationsEnable(
      this,
      request,
      options,
    ));
  }

  /**
   * Disable Destination
   *
   * @remarks
   * Disables a previously enabled destination.
   */
  async disable(
    request: operations.DisableTenantDestinationRequest,
    options?: RequestOptions,
  ): Promise<components.Destination> {
    return unwrapAsync(destinationsDisable(
      this,
      request,
      options,
    ));
  }
}
