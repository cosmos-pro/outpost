/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListTopicsJwtSecurity = {
  tenantJwt: string;
};

/** @internal */
export const ListTopicsJwtSecurity$inboundSchema: z.ZodType<
  ListTopicsJwtSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  TenantJwt: z.string(),
}).transform((v) => {
  return remap$(v, {
    "TenantJwt": "tenantJwt",
  });
});

/** @internal */
export type ListTopicsJwtSecurity$Outbound = {
  TenantJwt: string;
};

/** @internal */
export const ListTopicsJwtSecurity$outboundSchema: z.ZodType<
  ListTopicsJwtSecurity$Outbound,
  z.ZodTypeDef,
  ListTopicsJwtSecurity
> = z.object({
  tenantJwt: z.string(),
}).transform((v) => {
  return remap$(v, {
    tenantJwt: "TenantJwt",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListTopicsJwtSecurity$ {
  /** @deprecated use `ListTopicsJwtSecurity$inboundSchema` instead. */
  export const inboundSchema = ListTopicsJwtSecurity$inboundSchema;
  /** @deprecated use `ListTopicsJwtSecurity$outboundSchema` instead. */
  export const outboundSchema = ListTopicsJwtSecurity$outboundSchema;
  /** @deprecated use `ListTopicsJwtSecurity$Outbound` instead. */
  export type Outbound = ListTopicsJwtSecurity$Outbound;
}

export function listTopicsJwtSecurityToJSON(
  listTopicsJwtSecurity: ListTopicsJwtSecurity,
): string {
  return JSON.stringify(
    ListTopicsJwtSecurity$outboundSchema.parse(listTopicsJwtSecurity),
  );
}

export function listTopicsJwtSecurityFromJSON(
  jsonString: string,
): SafeParseResult<ListTopicsJwtSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListTopicsJwtSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListTopicsJwtSecurity' from JSON`,
  );
}
