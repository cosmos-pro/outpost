// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"openapi/internal/utils"
)

type DestinationCreateType string

const (
	DestinationCreateTypeDestinationCreateWebhook  DestinationCreateType = "DestinationCreateWebhook"
	DestinationCreateTypeDestinationCreateAWSSQS   DestinationCreateType = "DestinationCreateAWSSQS"
	DestinationCreateTypeDestinationCreateRabbitMQ DestinationCreateType = "DestinationCreateRabbitMQ"
)

type DestinationCreate struct {
	DestinationCreateWebhook  *DestinationCreateWebhook  `queryParam:"inline"`
	DestinationCreateAWSSQS   *DestinationCreateAWSSQS   `queryParam:"inline"`
	DestinationCreateRabbitMQ *DestinationCreateRabbitMQ `queryParam:"inline"`

	Type DestinationCreateType
}

func CreateDestinationCreateDestinationCreateWebhook(destinationCreateWebhook DestinationCreateWebhook) DestinationCreate {
	typ := DestinationCreateTypeDestinationCreateWebhook

	return DestinationCreate{
		DestinationCreateWebhook: &destinationCreateWebhook,
		Type:                     typ,
	}
}

func CreateDestinationCreateDestinationCreateAWSSQS(destinationCreateAWSSQS DestinationCreateAWSSQS) DestinationCreate {
	typ := DestinationCreateTypeDestinationCreateAWSSQS

	return DestinationCreate{
		DestinationCreateAWSSQS: &destinationCreateAWSSQS,
		Type:                    typ,
	}
}

func CreateDestinationCreateDestinationCreateRabbitMQ(destinationCreateRabbitMQ DestinationCreateRabbitMQ) DestinationCreate {
	typ := DestinationCreateTypeDestinationCreateRabbitMQ

	return DestinationCreate{
		DestinationCreateRabbitMQ: &destinationCreateRabbitMQ,
		Type:                      typ,
	}
}

func (u *DestinationCreate) UnmarshalJSON(data []byte) error {

	var destinationCreateWebhook DestinationCreateWebhook = DestinationCreateWebhook{}
	if err := utils.UnmarshalJSON(data, &destinationCreateWebhook, "", true, true); err == nil {
		u.DestinationCreateWebhook = &destinationCreateWebhook
		u.Type = DestinationCreateTypeDestinationCreateWebhook
		return nil
	}

	var destinationCreateAWSSQS DestinationCreateAWSSQS = DestinationCreateAWSSQS{}
	if err := utils.UnmarshalJSON(data, &destinationCreateAWSSQS, "", true, true); err == nil {
		u.DestinationCreateAWSSQS = &destinationCreateAWSSQS
		u.Type = DestinationCreateTypeDestinationCreateAWSSQS
		return nil
	}

	var destinationCreateRabbitMQ DestinationCreateRabbitMQ = DestinationCreateRabbitMQ{}
	if err := utils.UnmarshalJSON(data, &destinationCreateRabbitMQ, "", true, true); err == nil {
		u.DestinationCreateRabbitMQ = &destinationCreateRabbitMQ
		u.Type = DestinationCreateTypeDestinationCreateRabbitMQ
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for DestinationCreate", string(data))
}

func (u DestinationCreate) MarshalJSON() ([]byte, error) {
	if u.DestinationCreateWebhook != nil {
		return utils.MarshalJSON(u.DestinationCreateWebhook, "", true)
	}

	if u.DestinationCreateAWSSQS != nil {
		return utils.MarshalJSON(u.DestinationCreateAWSSQS, "", true)
	}

	if u.DestinationCreateRabbitMQ != nil {
		return utils.MarshalJSON(u.DestinationCreateRabbitMQ, "", true)
	}

	return nil, errors.New("could not marshal union type DestinationCreate: all fields are null")
}
