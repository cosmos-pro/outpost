// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"openapi/internal/utils"
)

type DestinationUpdateType string

const (
	DestinationUpdateTypeDestinationUpdateWebhook  DestinationUpdateType = "DestinationUpdateWebhook"
	DestinationUpdateTypeDestinationUpdateAWSSQS   DestinationUpdateType = "DestinationUpdateAWSSQS"
	DestinationUpdateTypeDestinationUpdateRabbitMQ DestinationUpdateType = "DestinationUpdateRabbitMQ"
)

type DestinationUpdate struct {
	DestinationUpdateWebhook  *DestinationUpdateWebhook  `queryParam:"inline"`
	DestinationUpdateAWSSQS   *DestinationUpdateAWSSQS   `queryParam:"inline"`
	DestinationUpdateRabbitMQ *DestinationUpdateRabbitMQ `queryParam:"inline"`

	Type DestinationUpdateType
}

func CreateDestinationUpdateDestinationUpdateWebhook(destinationUpdateWebhook DestinationUpdateWebhook) DestinationUpdate {
	typ := DestinationUpdateTypeDestinationUpdateWebhook

	return DestinationUpdate{
		DestinationUpdateWebhook: &destinationUpdateWebhook,
		Type:                     typ,
	}
}

func CreateDestinationUpdateDestinationUpdateAWSSQS(destinationUpdateAWSSQS DestinationUpdateAWSSQS) DestinationUpdate {
	typ := DestinationUpdateTypeDestinationUpdateAWSSQS

	return DestinationUpdate{
		DestinationUpdateAWSSQS: &destinationUpdateAWSSQS,
		Type:                    typ,
	}
}

func CreateDestinationUpdateDestinationUpdateRabbitMQ(destinationUpdateRabbitMQ DestinationUpdateRabbitMQ) DestinationUpdate {
	typ := DestinationUpdateTypeDestinationUpdateRabbitMQ

	return DestinationUpdate{
		DestinationUpdateRabbitMQ: &destinationUpdateRabbitMQ,
		Type:                      typ,
	}
}

func (u *DestinationUpdate) UnmarshalJSON(data []byte) error {

	var destinationUpdateWebhook DestinationUpdateWebhook = DestinationUpdateWebhook{}
	if err := utils.UnmarshalJSON(data, &destinationUpdateWebhook, "", true, true); err == nil {
		u.DestinationUpdateWebhook = &destinationUpdateWebhook
		u.Type = DestinationUpdateTypeDestinationUpdateWebhook
		return nil
	}

	var destinationUpdateAWSSQS DestinationUpdateAWSSQS = DestinationUpdateAWSSQS{}
	if err := utils.UnmarshalJSON(data, &destinationUpdateAWSSQS, "", true, true); err == nil {
		u.DestinationUpdateAWSSQS = &destinationUpdateAWSSQS
		u.Type = DestinationUpdateTypeDestinationUpdateAWSSQS
		return nil
	}

	var destinationUpdateRabbitMQ DestinationUpdateRabbitMQ = DestinationUpdateRabbitMQ{}
	if err := utils.UnmarshalJSON(data, &destinationUpdateRabbitMQ, "", true, true); err == nil {
		u.DestinationUpdateRabbitMQ = &destinationUpdateRabbitMQ
		u.Type = DestinationUpdateTypeDestinationUpdateRabbitMQ
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for DestinationUpdate", string(data))
}

func (u DestinationUpdate) MarshalJSON() ([]byte, error) {
	if u.DestinationUpdateWebhook != nil {
		return utils.MarshalJSON(u.DestinationUpdateWebhook, "", true)
	}

	if u.DestinationUpdateAWSSQS != nil {
		return utils.MarshalJSON(u.DestinationUpdateAWSSQS, "", true)
	}

	if u.DestinationUpdateRabbitMQ != nil {
		return utils.MarshalJSON(u.DestinationUpdateRabbitMQ, "", true)
	}

	return nil, errors.New("could not marshal union type DestinationUpdate: all fields are null")
}
