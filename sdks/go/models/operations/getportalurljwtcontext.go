// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"openapi/models/components"
)

// GetPortalURLJwtContextTheme - Optional theme preference for the portal.
type GetPortalURLJwtContextTheme string

const (
	GetPortalURLJwtContextThemeLight GetPortalURLJwtContextTheme = "light"
	GetPortalURLJwtContextThemeDark  GetPortalURLJwtContextTheme = "dark"
)

func (e GetPortalURLJwtContextTheme) ToPointer() *GetPortalURLJwtContextTheme {
	return &e
}
func (e *GetPortalURLJwtContextTheme) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "light":
		fallthrough
	case "dark":
		*e = GetPortalURLJwtContextTheme(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPortalURLJwtContextTheme: %v", v)
	}
}

type GetPortalURLJwtContextRequest struct {
	// Optional theme preference for the portal.
	Theme *GetPortalURLJwtContextTheme `queryParam:"style=form,explode=true,name=theme"`
}

func (o *GetPortalURLJwtContextRequest) GetTheme() *GetPortalURLJwtContextTheme {
	if o == nil {
		return nil
	}
	return o.Theme
}

type GetPortalURLJwtContextResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Portal redirect URL.
	PortalRedirect *components.PortalRedirect
}

func (o *GetPortalURLJwtContextResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetPortalURLJwtContextResponse) GetPortalRedirect() *components.PortalRedirect {
	if o == nil {
		return nil
	}
	return o.PortalRedirect
}
