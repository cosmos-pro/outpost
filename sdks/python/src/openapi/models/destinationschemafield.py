"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from openapi.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class DestinationSchemaFieldType(str, Enum):
    TEXT = "text"
    NUMBER = "number"
    BOOLEAN = "boolean"


class DestinationSchemaFieldTypedDict(TypedDict):
    type: NotRequired[DestinationSchemaFieldType]
    label: NotRequired[str]
    description: NotRequired[str]
    validation: NotRequired[str]
    r"""Regex string for validation."""
    required: NotRequired[bool]


class DestinationSchemaField(BaseModel):
    type: Optional[DestinationSchemaFieldType] = None

    label: Optional[str] = None

    description: Optional[str] = None

    validation: Optional[str] = None
    r"""Regex string for validation."""

    required: Optional[bool] = None
