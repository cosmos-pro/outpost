// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type PublishRequest struct {
	// The ID of the tenant to publish for.
	TenantID string `json:"tenant_id"`
	// Optional. Route event to a specific destination.
	DestinationID *string `json:"destination_id,omitempty"`
	// Topic name for the event.
	Topic string `json:"topic"`
	// Should event delivery be retried on failure.
	EligibleForRetry bool `json:"eligible_for_retry"`
	// Any key-value string pairs for metadata.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Any JSON payload for the event data.
	Data map[string]any `json:"data"`
}

func (o *PublishRequest) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *PublishRequest) GetDestinationID() *string {
	if o == nil {
		return nil
	}
	return o.DestinationID
}

func (o *PublishRequest) GetTopic() string {
	if o == nil {
		return ""
	}
	return o.Topic
}

func (o *PublishRequest) GetEligibleForRetry() bool {
	if o == nil {
		return false
	}
	return o.EligibleForRetry
}

func (o *PublishRequest) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *PublishRequest) GetData() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.Data
}
